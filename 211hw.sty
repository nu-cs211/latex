\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{211hw}[2020/2/9 0.2.1]

\DeclareOption*{\PassOptionsToPackage{\CurrentOption}{211common}}
\ProcessOptions\relax

\RequirePackage{211common}
\RequirePackage{tikz}
\RequirePackage{booktabs}
\RequirePackage[normalem]{ulem}

\usetikzlibrary{calc}

\newcommand\HWROOT{\WEBROOT/hw}

\lstset{showstringspaces=false}

\if@cxx
  \RequirePackage{charter}
  \RequirePackage{multicol}
  \RequirePackage[margin=1in]{geometry}

  \RequirePackage{fontspec}
  \setmonofont[Scale=0.88]{Iosevka}

  \addtokomafont{title}{\mdseries}
  \addtokomafont{author}{\mdseries\sffamily}
  \addtokomafont{date}{\mdseries\sffamily}
  \addtokomafont{section}{\raggedright\mdseries}
  \addtokomafont{subsection}{\raggedright\mdseries}
  \addtokomafont{subsubsection}{\raggedright\mdseries}

  \RequirePackage{tocloft}
  \let\old@cfttoctitlefont\cfttoctitlefont
  \renewcommand{\cfttoctitlefont}{\old@cfttoctitlefont\mdseries}

  \renewcommand{\cftsecfont}{\sffamily\bfseries}
  \renewcommand{\cftsubsecfont}{\sffamily}
  \renewcommand{\cftsubsubsecfont}{\ttfamily}

  % Don't show numbers on subsubsection headings:
  \renewcommand{\thesubsubsection}{}

  \pagestyle{headings}

  \let\aside@helper\footnote
  \newcommand\liningnumerals[1]{{#1}}
\else
  \RequirePackage{lmodern}
  \RequirePackage[%
    rm={oldstyle=true,proportional=true},%
    sf={oldstyle=false,proportional=true},%
    tt={oldstyle=false,proportional=false,variable=false},%
    qt=false%
  ]{cfr-lm}
  \let\LiningNumerals\textl

  \let\aside@helper\marginpar
  \setlength\CmdLineIndent{\parindent}
\fi

\newcommand\asideparindent{0.25in}
\newcommand\aside[1]{%
  \aside@helper{%
    \setlength\parindent{\asideparindent}\noindent\ignorespaces
    #1%
  }%
  \ignorespaces
}

\newif\if@partner@allowed

\newcommand\HomeworkInfo[1][2]{
  \date{\TERM}
  \if2#1
    \@partner@allowedtrue
  \else
    \@partner@allowedfalse
  \fi
  \@ifnextchar *
    \HomeworkInfo@manual
    \HomeworkInfo@auto
}

\def\HomeworkInfo@manual*#1#2{
  \title{#1}
  \author{\COURSENO}
  \def\DueDateRows{#2}
}

\def\HomeworkInfo@auto#1{
  \def\hw@number{#1}
  \def\hw@number@padded{\@pad@two{#1}}
  \HomeworkInfo@rest
}

\newcommand\DeadlineTime{11:59 PM, Central Time}

\newcommand\HomeworkInfo@rest[3][\relax]{
  \ifx#1\relax
    \title{\COURSENO\ Homework \hw@number}
  \else
    \title{Homework \hw@number: #1}
    \author{\COURSENO}
  \fi
  \def\DueDateRows{
    Code Due:      & #2, \DeadlineTime \\
    \if#3\relax\else
    Self-Eval Due: & #3, \DeadlineTime \\
    \fi
  }
}


\if@cxx

  \newcommand\CPrelims{
    Download \href{\WEBROOT/hw\hw@number@padded.zip}{the project ZIP
    file} to your computer%
    \footnote{To complete this homework on your own computer, you need a
    C++14 toolchain and the SDL2 libraries. Follow
    \href{\CxxSetupUrl}{these instructions} to install
    the software you need.
    }%
    , unzip it, and open the resulting directory in CLion.
    (Be careful that you open the \filename{hw\hw@number@padded} directory and
    not some sub- or superdirectory thereof. If you do, CLion will create
    a bogus \filename{CMakeLists.txt} that won't be able to find SDL2.)
  }

\else

  \newcommand\CPrelims[1][\CmdLineIndent]{
    Login
    \marginpar{
    This homework assignment must be completed on Linux by logging into
    \href{\LabHostnames@ShortUrl}{a Linux workstation}.
      Each time you login to work on \COURSENO,
      you should run \progname{fish} to ensure your environment is
      setup correctly. (If your shell says that \progname{fish}
      isn't found, that probably means you missed the step in Lab 1
      where you were supposed to run
      \texttt{\plaintilde cs211/setup211}.)
      \par
      \small\LiningNumerals{\tableofcontents}
    }%
    to the server of your choice and \progname{cd} to the
    directory where you keep your \COURSENO\ work. Then
    unarchive the starter code, and change into the project directory:
    \par
    \begin{CmdLine}[#1]
      \C cd cs211 \\
      \C tar -kxvf \plaintilde cs211/hw/hw\hw@number@padded.tgz \\
      \ETC
      \C cd hw\hw@number@padded \\
      \NoPrompt
    \end{CmdLine}
  }

\fi

\newcommand\CSubmit[2][\CmdLineIndent]{

  Homework submission and grading will use the GSC grading server. You
  must include any files that you create or change. #2

  Per the \href{https://nu-cs211.github.io/cs211-files/syllabus.pdf}{syllabus},
  if you engaged in arms-length collaboration on this assignment, you must also
  submit a file named \filename{COLLABORATION.txt} that lists your arms-length
  collaborators. See the
  \href{https://nu-cs211.github.io/cs211-files/syllabus.pdf}{syllabus} for
  specific details.

  \if@cxx

    You should upload your files on
    \href{https://cs211.cs.northwestern.edu/gsc}{the GSC web
    site}.\aside{It’s also possible to install the command-line GSC client
    \texttt{\textbf{gsc}(1)} on your local machine.}

  \else

    Submit using the command-line GSC client \texttt{\textbf{gsc}(1)}.
    Instructions are available in the \texttt{\textbf{submit211}(7)}
    manual page on the Unix login and lab machines. To view the manual
    page, run:

    \begin{CmdLine}[#1]
      \C man submit211 \\
      \NoPrompt
    \end{CmdLine}

  \fi

  \if@partner@allowed

    \subsection{Partners}

    If you work with a partner then you must register\aside{Be careful
    with partner registration, because once a partner request is
    accepted, undoing it requires an appeal to the instructor.} your
    partnership \textbf{before uploading to GSC}. There are two steps to
    this: one partner must create a \emph{partner request} (referring to
    their intended partner by NetID), and then the other partner must
    accept that request for it to take effect.

    \if@cxx

      Create partner requests on the GSC website or using the
      command-line tool; outstanding partner requests will appear on the
      page for the relevant homework as well as your main GSC
      submissions page.

    \else

      Partner requests are created with the \texttt{gsc partner request}
      command and accepted using  using the \texttt{gsc partner accept}
      command. You can list outstanding partner requests with the
      \texttt{gsc status} command and cancel them with the \texttt{gsc
      partner cancel} command.\marginpar{It’s also possible to manage
      partner requests via the website.} See the
      \texttt{\textbf{gsc}(1)} manual page for details.

    \fi

    Before a partner request can be accepted, the files in the two
    submissions must be disjoint. (The system will not choose whose file
    to delete if you both have files with the same name.) Once a partner
    request is accepted, you and your partner's submissions are joined
    together: when one partner uploads files to the GSC server or
    performs self evaluation, the results will be visible to both.

  \fi

}

\newcommand\MakeTitle[1][\relax]{
  \maketitle
  \if@cxx\begin{center}\fi
  \begin{tabular}[t]{llr}
    \DueDateRows
    Partners:
    & \if@partner@allowed
        Yes; register on GSC before submission
      \else
        No; must be completed by yourself
      \fi
  \end{tabular}
  \ifx#1\relax\else\aside{#1}\fi
  \if@cxx\end{center}\bigskip\fi
}

%% Cross-refs

\newcommand\crossref[2]{%
  \kern2pt\raise.8ex\hbox{%
    \normalfont\scriptsize
    [\hyperref[#1]{\slshape #2}]}
  \allowbreak
}

\newcommand\specanchor[1]{\phantomsection\label{spec:#1}}

\newcommand\hintanchor[1]{\label{hint:#1}}

\newcommand\use@if[2]{%
  \ifx#1\relax
    #2%
  \else
    \begingroup
    \def\-{#2}%
    #1%
    \endgroup
  \fi
}

\newcommand\hintref[2][\relax]{%
  \crossref{hint:#2}{\use@if{#1}{hint}{>>}}%
}

\newcommand\specref[2][\relax]{%
  \crossref{spec:#2}{{<<}\use@if{#1}{spec}}%
}

\newcommand\specpoint[2][\relax]{%
  \specanchor{#2}\hintref[#1]{#2}%
}

\newcommand\hintpoint[2][\relax]{%
  \hintanchor{#2}\specref[#1]{#2}%
}

\newcommand\functionhint[3][\relax]{%
  \hintpoint[\use@if{#1}{\functionref{#3}{}} \-]{#2}%
}

\newcommand\functionspec[3][\relax]{%
  \specpoint[\use@if{#1}{\functionref{#3}{}} \-]{#2}%
}

\newcommand\defref@normal@style{\dashuline}
\newcommand\defref@star@style{\relax}

\newcommand\defref[2]{%
  \newcommand#1{%
    \def\defref@current@target{#2}%
    \@ifnextchar*
      \defref@star
      \defref@no@star}}

\def\defref@star*{%
  \let\defref@current@style\defref@star@style
  \defref@dispatch
}

\def\defref@no@star{%
  \let\defref@current@style\defref@normal@style
  \defref@dispatch
}

\def\defref@dispatch{%
  \@ifnextchar<
    \defref@eat@point
    \defref@normal}

{
  \catcode`\_=\active\relax
  \gdef\active@underscore{_}

  \catcode`\_=12\relax
  \gdef\normal@underscore{_}
}

\def\defref@eat@point<{%
  \bgroup
  \catcode`\_=\active
  \relax
  \expandafter\def\active@underscore{\normal@underscore}%
  \defref@point
}

\def\defref@point#1>{%
  \defref@normal{\identifierText{#1}}%
  \egroup
  \relax
}

\def\defref@normal#1{%
  \defref@current@style{\href{\defref@current@target}{#1}}}

\CaretCode
